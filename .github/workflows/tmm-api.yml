name: Build the tmm-api service

on: [push]

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  STACK_NAME: tmm-api

jobs:
  tmm-checks: 
    defaults:
      run:
        working-directory: 'services/tmm-api'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3    
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
      - run: poetry config virtualenvs.prefer-active-python true      
      - run: poetry install
      - name: Tests
        run: poetry run pytest
      - name: Typing
        run: poetry run mypy .
      - name: Lint - flake8
        run: poetry run flake8
      - name: Lint - black
        run: poetry run black --check .
      

  tmm-docker:
    runs-on: ubuntu-latest
    outputs:
      GITHUB_SHA_SHORT: ${{ steps.sha7.outputs.GITHUB_SHA_SHORT }}
      TMM_API_IMAGE_NAME: ${{ steps.image-name.outputs.TMM_API_IMAGE_NAME}}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Get short SHA
        id: sha7
        run: |
          GITHUB_SHA_SHORT=$(echo ${{ github.sha }} | cut -c1-7)
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA_SHORT}" >> $GITHUB_ENV
          echo "::set-output name=GITHUB_SHA_SHORT::${GITHUB_SHA_SHORT}"
      - name: Set image name
        id: image-name
        run: |
          TMM_API_IMAGE_NAME=${REGISTRY}/${REPOSITORY}/${STACK_NAME}:${GITHUB_SHA_SHORT}
          echo "TMM_API_IMAGE_NAME=${TMM_API_IMAGE_NAME}" >> $GITHUB_ENV
          echo "::set-output name=TMM_API_IMAGE_NAME::${TMM_API_IMAGE_NAME}"
          echo "$TMM_API_IMAGE_NAME"
      - uses: buildpacks/github-actions/setup-pack@v4.8.1
      - name: Build tmm-api image using buildpacks
        working-directory: 'services/tmm-api'
        run: pack build ${TMM_API_IMAGE_NAME} --buildpack paketo-buildpacks/python --builder gcr.io/paketo-buildpacks/builder:base
      - name: Start service
        run: docker-compose -f docker-compose.int.yaml up -d
      - name: Check service
        run: |
          sleep 10
          curl -f localhost:5000/internal/health/self
          curl -f localhost:5000/internal/health/int
      - name: Service Logs
        if: failure()
        run: docker-compose -f docker-compose.int.yaml logs
      - name: Stop service
        if: always()
        run: docker-compose -f docker-compose.int.yaml down
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      #- name: Push image
      #  run: docker push ${TMM_API_IMAGE_NAME}

